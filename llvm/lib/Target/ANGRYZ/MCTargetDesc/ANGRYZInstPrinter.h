#ifndef LLVM_LIB_TARGET_ANGRYZ_MCTARGETDESC_ANGRYZINSTPRINTER_H
#define LLVM_LIB_TARGET_ANGRYZ_MCTARGETDESC_ANGRYZINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"
namespace llvm {

class ANGRYZInstPrinter : public MCInstPrinter {
public:
  ANGRYZInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                   const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  //bool applyTargetSpecificCLOption(StringRef Opt) override;

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;
  void printRegName(raw_ostream &O, MCRegister Reg) const override;

  // Autogenerated by tblgen.
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, uint64_t Address,
                         raw_ostream &O);
  
  bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &O);
  /*
  void printCustomAliasOperand(const MCInst *MI, uint64_t Address,
                               unsigned OpIdx, unsigned PrintMethodIdx,
                               const MCSubtargetInfo &STI, raw_ostream &O);
  */
  static const char *getRegisterName(MCRegister Reg, unsigned AltIdx);

  static const char *getRegisterName(MCRegister Reg);
  /*
  todo
  issue
    存在一个问题，tblgen生成的AsmWriter定义的printInstruction 以及 printOperand都没有SubtargetInfo
    这个参数，但是riscv生成的就有subtargetinfo这个参数，可能是td某些内容导致的4
    现在去掉subtargetinfo参数
  */
  void printOperand(const MCInst *MI, unsigned OpNo,
                    raw_ostream &O, const char *Modifier = nullptr);


};
} //namespace llvm
#endif